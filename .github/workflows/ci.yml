name: NodeJS with Gulp

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install pnpm
      run: npm install -g pnpm  # Install pnpm globally

    - name: Set up environment variables from GitHub Secrets
      run: |
        echo "APP_ENV=${{ secrets.APP_ENV }}" >> $GITHUB_ENV
        echo "PORT=${{ secrets.PORT }}" >> $GITHUB_ENV
        echo "MONGODB_URI=${{ secrets.MONGODB_URI }}" >> $GITHUB_ENV
        echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> $GITHUB_ENV
        echo "JWT_EXPIRES_IN=${{ secrets.JWT_EXPIRES_IN }}" >> $GITHUB_ENV
        echo "JWT_REFRESH_SECRET=${{ secrets.JWT_REFRESH_SECRET }}" >> $GITHUB_ENV
        echo "JWT_REFRESH_EXPIRES_IN=${{ secrets.JWT_REFRESH_EXPIRES_IN }}" >> $GITHUB_ENV
        echo "MAIL_HOST=${{ secrets.MAIL_HOST }}" >> $GITHUB_ENV
        echo "MAIL_PORT=${{ secrets.MAIL_PORT }}" >> $GITHUB_ENV
        echo "MAIL_USER=${{ secrets.MAIL_USER }}" >> $GITHUB_ENV
        echo "MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}" >> $GITHUB_ENV
        echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
        echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
        echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> $GITHUB_ENV
        echo "AWS_S3_BUCKET_NAME=${{ secrets.AWS_S3_BUCKET_NAME }}" >> $GITHUB_ENV

    - name: Install dependencies and build
      run: |
        cd backend  # Navigate to the backend directory
        pnpm install  # Install dependencies using pnpm
        pnpm run build  # Run the build script using pnpm

    - name: Run the backend service
      run: |
        cd backend  # Navigate to the backend directory
        pnpm run start:all  # Start the backend services (you can replace this with a specific service like start:garage-api)
